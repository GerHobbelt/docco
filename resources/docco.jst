<!DOCTYPE html>

<html>
<head>
  <title><%= title %></title>
  <meta http-equiv="content-type" content="text/html; charset=UTF-8">
  <link rel="stylesheet" media="all" href="docco.css" />
</head>
<body>
  <div id="container">
    <div id="background"></div>
    <% if (sources.length > 1) { %>
      <div id="jump_to">
        <div id="jump_actions">
          <input id="jump_filter" placeholder="Filter Jump To..."><span id="jump_filter_clear">x</span>
          <div id="jump_tease">Jump To &hellip;</div>
        </div>
        <div id="jump_wrapper">
          <div id="jump_sources" class="jump_page">
            <% for (var i=0, l=sources.length; i<l; i++) { %>
              <% var source = sources[i]; %>
              <a class="source" href="<%= path.basename(destination(source)) %>">
                <%= path.basename(source) %>
              </a>
            <% } %>
          </div>
          <div id="jump_results" class="jump_page"></div>
        </div>
      </div>
    <% } %>
    <table cellpadding="0" cellspacing="0">
      <thead>
        <tr>
          <th class="docs">
            <h1>
              <%= title %>
            </h1>
          </th>
          <th class="code">
          </th>
        </tr>
      </thead>
      <tbody>
        <% for (var i=0, l=sections.length; i<l; i++) { %>
          <% var section = sections[i]; %>
          <tr id="section-<%= i + 1 %>">
            <td class="docs">
              <div class="pilwrap">
                <a class="pilcrow" href="#section-<%= i + 1 %>">&#182;</a>
              </div>
              <%= section.docs_html %>
            </td>
            <td class="code">
              <%= section.code_html %>
            </td>
          </tr>
        <% } %>
      </tbody>
    </table>
  </div>
  <% if (sources.length > 1) { %>
    <script type="text/javascript">
      var jSLink_els = document.getElementsByClassName("source")
        , jSources = []
        , jF_el = document.getElementById("jump_filter")
        , jFC_el = document.getElementById("jump_filter_clear")
        , jS_el = document.getElementById("jump_sources")
        , jR_el = document.getElementById("jump_results");
      
      function makefuzzy( txt ) {
        return new RegExp(txt.split("").map(function( c ) {
          return "\\/?!,.:=-+*^$[]()".indexOf(c) > -1 ? "\\\\" + c : c;
        }).join(".*"));
      }
      
      function toggleJump( txt ) {
        jS_el.style.display = txt ? "none" : "block";
        jR_el.style.display = txt ? "block" : "none";
        return txt;
      }
      
      for (var i=0, j=jSLink_els.length; i<j; i++) {
        jSources.push(jSLink_els[i].textContent.trim().toLowerCase());
      }
      
      jF_el.addEventListener("keyup", function() {
        var txt = this.value.trim().toLowerCase()
          , fuzz = makefuzzy(txt)
          , srcWeights = [];
        
        if (!toggleJump(txt)) return true;
        
        for (var i=0, j=jSources.length; i<j; i++) {
          switch (jSources[i].indexOf(txt)) {
            case -1:
              if (fuzz.test(jSources[i]))
                srcWeights.push({ weight: 3, idx: i });
              break;
            case 0:
              srcWeights.push({ weight: 1, idx: i });
              break;
            default:
              srcWeights.push({ weight: 2, idx: i });
          }
        }
        
        jR_el.innerHTML = "";
        srcWeights.sort(function( a, b ) {
          return a.weight - b.weight;
        }).forEach(function( src ) {
          jR_el.appendChild(jSLink_els[src.idx].cloneNode(true));
        });
      });
      jFC_el.addEventListener("click", function() { toggleJump(jF_el.value = ""); });
    </script>
  <% } %>
</body>
</html>
